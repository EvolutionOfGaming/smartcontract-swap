{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {
				"@_1148": {
					"entryPoint": null,
					"id": 1148,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@_42": {
					"entryPoint": null,
					"id": 42,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@_msgSender_465": {
					"entryPoint": 176,
					"id": 465,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@_transferOwnership_1214": {
					"entryPoint": 184,
					"id": 1214,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"abi_decode_t_contract$_ERC20_$1021_fromMemory": {
					"entryPoint": 483,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_contract$_ERC20_$1021_fromMemory": {
					"entryPoint": 506,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 417,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_contract$_ERC20_$1021": {
					"entryPoint": 437,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 385,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 380,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"validator_revert_t_contract$_ERC20_$1021": {
					"entryPoint": 457,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1399:8",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "47:35:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "57:19:8",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "73:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "67:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "67:9:8"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "57:6:8"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "40:6:8",
										"type": ""
									}
								],
								"src": "7:75:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "177:28:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "194:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "197:1:8",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "187:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "187:12:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "187:12:8"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "88:117:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "300:28:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "317:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "320:1:8",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "310:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "310:12:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "310:12:8"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "211:117:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "379:81:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "389:65:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "404:5:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "411:42:8",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "400:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "400:54:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "389:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "361:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "371:7:8",
										"type": ""
									}
								],
								"src": "334:126:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "511:51:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "521:35:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "550:5:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "532:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "532:24:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "521:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "493:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "503:7:8",
										"type": ""
									}
								],
								"src": "466:96:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "627:51:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "637:35:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "666:5:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_address",
													"nodeType": "YulIdentifier",
													"src": "648:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "648:24:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "637:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_contract$_ERC20_$1021",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "609:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "619:7:8",
										"type": ""
									}
								],
								"src": "568:110:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "741:93:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "812:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "821:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "824:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "814:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "814:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "814:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "764:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "803:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_contract$_ERC20_$1021",
																	"nodeType": "YulIdentifier",
																	"src": "771:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "771:38:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "761:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "761:49:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "754:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "754:57:8"
											},
											"nodeType": "YulIf",
											"src": "751:77:8"
										}
									]
								},
								"name": "validator_revert_t_contract$_ERC20_$1021",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "734:5:8",
										"type": ""
									}
								],
								"src": "684:150:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "917:94:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "927:22:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "942:6:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "936:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "936:13:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "927:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "999:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_contract$_ERC20_$1021",
													"nodeType": "YulIdentifier",
													"src": "958:40:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "958:47:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "958:47:8"
										}
									]
								},
								"name": "abi_decode_t_contract$_ERC20_$1021_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "895:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "903:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "911:5:8",
										"type": ""
									}
								],
								"src": "840:171:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1108:288:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1154:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "1156:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "1156:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1156:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1129:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1138:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1125:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1125:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1150:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1121:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1121:32:8"
											},
											"nodeType": "YulIf",
											"src": "1118:119:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "1247:142:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1262:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1276:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1266:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1291:88:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1351:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1362:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1347:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1371:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_contract$_ERC20_$1021_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "1301:45:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1301:78:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1291:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_contract$_ERC20_$1021_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1078:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1089:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1101:6:8",
										"type": ""
									}
								],
								"src": "1017:379:8"
							}
						]
					},
					"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$1021(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$1021(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$1021(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$1021_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$1021(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$1021_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$1021_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
					"id": 8,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "60806040526000600155670de0b6b3a76400006002553480156200002257600080fd5b5060405162001117380380620011178339818101604052810190620000489190620001fa565b620000686200005c620000b060201b60201c565b620000b860201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200022c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ae8262000181565b9050919050565b6000620001c282620001a1565b9050919050565b620001d481620001b5565b8114620001e057600080fd5b50565b600081519050620001f481620001c9565b92915050565b6000602082840312156200021357620002126200017c565b5b60006200022384828501620001e3565b91505092915050565b610edb806200023c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063676c0d7711610066578063676c0d77146101465780638da5cb5b14610176578063be39f1af14610194578063d55f9273146101b2578063f2fde38b146101d057610093565b80630f323484146100985780631a909cd5146100b65780634eb6b067146100e657806364db444a14610116575b600080fd5b6100a06101ec565b6040516100ad9190610826565b60405180910390f35b6100d060048036038101906100cb919061087c565b610212565b6040516100dd91906108d7565b60405180910390f35b61010060048036038101906100fb91906108f2565b6103c7565b60405161010d9190610826565b60405180910390f35b610130600480360381019061012b919061096f565b6103fa565b60405161013d91906109ab565b60405180910390f35b610160600480360381019061015b91906108f2565b6104ed565b60405161016d91906108d7565b60405180910390f35b61017e61057b565b60405161018b91906109d5565b60405180910390f35b61019c6105a4565b6040516101a991906109ab565b60405180910390f35b6101ba6105aa565b6040516101c791906109ab565b60405180910390f35b6101ea60048036038101906101e59190610a1c565b6105b0565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600061025b8560025460126106a8565b90508173ffffffffffffffffffffffffffffffffffffffff166323b872dd6102816106db565b61028961057b565b846040518463ffffffff1660e01b81526004016102a893929190610a49565b602060405180830381600087803b1580156102c257600080fd5b505af11580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610aac565b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd61034161057b565b6103496106db565b886040518463ffffffff1660e01b815260040161036893929190610a49565b602060405180830381600087803b15801561038257600080fd5b505af1158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610aac565b5060019250505092915050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006104046106db565b73ffffffffffffffffffffffffffffffffffffffff1661042261057b565b73ffffffffffffffffffffffffffffffffffffffff1614610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f90610b36565b60405180910390fd5b6001549050816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008282546104e19190610b85565b92505081905550919050565b60006104f76106db565b73ffffffffffffffffffffffffffffffffffffffff1661051561057b565b73ffffffffffffffffffffffffffffffffffffffff161461056b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056290610b36565b60405180910390fd5b8160028190555060019050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b60015481565b6105b86106db565b73ffffffffffffffffffffffffffffffffffffffff166105d661057b565b73ffffffffffffffffffffffffffffffffffffffff161461062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390610b36565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069390610c4d565b60405180910390fd5b6106a5816106e3565b50565b60008082600a6106b89190610da0565b84866106c49190610deb565b6106ce9190610e74565b9050809150509392505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107ec6107e76107e2846107a7565b6107c7565b6107a7565b9050919050565b60006107fe826107d1565b9050919050565b6000610810826107f3565b9050919050565b61082081610805565b82525050565b600060208201905061083b6000830184610817565b92915050565b600080fd5b6000819050919050565b61085981610846565b811461086457600080fd5b50565b60008135905061087681610850565b92915050565b6000806040838503121561089357610892610841565b5b60006108a185828601610867565b92505060206108b285828601610867565b9150509250929050565b60008115159050919050565b6108d1816108bc565b82525050565b60006020820190506108ec60008301846108c8565b92915050565b60006020828403121561090857610907610841565b5b600061091684828501610867565b91505092915050565b600061092a826107a7565b9050919050565b600061093c8261091f565b9050919050565b61094c81610931565b811461095757600080fd5b50565b60008135905061096981610943565b92915050565b60006020828403121561098557610984610841565b5b60006109938482850161095a565b91505092915050565b6109a581610846565b82525050565b60006020820190506109c0600083018461099c565b92915050565b6109cf8161091f565b82525050565b60006020820190506109ea60008301846109c6565b92915050565b6109f98161091f565b8114610a0457600080fd5b50565b600081359050610a16816109f0565b92915050565b600060208284031215610a3257610a31610841565b5b6000610a4084828501610a07565b91505092915050565b6000606082019050610a5e60008301866109c6565b610a6b60208301856109c6565b610a78604083018461099c565b949350505050565b610a89816108bc565b8114610a9457600080fd5b50565b600081519050610aa681610a80565b92915050565b600060208284031215610ac257610ac1610841565b5b6000610ad084828501610a97565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b20602083610ad9565b9150610b2b82610aea565b602082019050919050565b60006020820190508181036000830152610b4f81610b13565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b9082610846565b9150610b9b83610846565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bd057610bcf610b56565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c37602683610ad9565b9150610c4282610bdb565b604082019050919050565b60006020820190508181036000830152610c6681610c2a565b9050919050565b60008160011c9050919050565b6000808291508390505b6001851115610cc457808604811115610ca057610c9f610b56565b5b6001851615610caf5780820291505b8081029050610cbd85610c6d565b9450610c84565b94509492505050565b600082610cdd5760019050610d99565b81610ceb5760009050610d99565b8160018114610d015760028114610d0b57610d3a565b6001915050610d99565b60ff841115610d1d57610d1c610b56565b5b8360020a915084821115610d3457610d33610b56565b5b50610d99565b5060208310610133831016604e8410600b8410161715610d6f5782820a905083811115610d6a57610d69610b56565b5b610d99565b610d7c8484846001610c7a565b92509050818404811115610d9357610d92610b56565b5b81810290505b9392505050565b6000610dab82610846565b9150610db683610846565b9250610de37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610ccd565b905092915050565b6000610df682610846565b9150610e0183610846565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e3a57610e39610b56565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7f82610846565b9150610e8a83610846565b925082610e9a57610e99610e45565b5b82820490509291505056fea264697066735822122018dde87b3ac1af25d7fbce77ba1b472e2aaddd87233c11853331d3184b4f531c64736f6c63430008090033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1117 CODESIZE SUB DUP1 PUSH3 0x1117 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x1FA JUMP JUMPDEST PUSH3 0x68 PUSH3 0x5C PUSH3 0xB0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x22C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AE DUP3 PUSH3 0x181 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C2 DUP3 PUSH3 0x1A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D4 DUP2 PUSH3 0x1B5 JUMP JUMPDEST DUP2 EQ PUSH3 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F4 DUP2 PUSH3 0x1C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x213 JUMPI PUSH3 0x212 PUSH3 0x17C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x223 DUP5 DUP3 DUP6 ADD PUSH3 0x1E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDB DUP1 PUSH3 0x23C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x676C0D77 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x676C0D77 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xBE39F1AF EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xD55F9273 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0xF323484 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x1A909CD5 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x4EB6B067 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x64DB444A EQ PUSH2 0x116 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x96F JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xA1C JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x25B DUP6 PUSH1 0x2 SLOAD PUSH1 0x12 PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x281 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x289 PUSH2 0x57B JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x341 PUSH2 0x57B JUMP JUMPDEST PUSH2 0x349 PUSH2 0x6DB JUMP JUMPDEST DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 PUSH2 0x6DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x422 PUSH2 0x57B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 PUSH2 0x6DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x515 PUSH2 0x57B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x56B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x562 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0x6DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D6 PUSH2 0x57B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x693 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6A5 DUP2 PUSH2 0x6E3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xA PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP5 DUP7 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EC PUSH2 0x7E7 PUSH2 0x7E2 DUP5 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FE DUP3 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x810 DUP3 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x820 DUP2 PUSH2 0x805 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x83B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x817 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x859 DUP2 PUSH2 0x846 JUMP JUMPDEST DUP2 EQ PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x876 DUP2 PUSH2 0x850 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x893 JUMPI PUSH2 0x892 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A1 DUP6 DUP3 DUP7 ADD PUSH2 0x867 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8B2 DUP6 DUP3 DUP7 ADD PUSH2 0x867 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D1 DUP2 PUSH2 0x8BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x908 JUMPI PUSH2 0x907 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x916 DUP5 DUP3 DUP6 ADD PUSH2 0x867 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92A DUP3 PUSH2 0x7A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94C DUP2 PUSH2 0x931 JUMP JUMPDEST DUP2 EQ PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x969 DUP2 PUSH2 0x943 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x985 JUMPI PUSH2 0x984 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x993 DUP5 DUP3 DUP6 ADD PUSH2 0x95A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9A5 DUP2 PUSH2 0x846 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x99C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9CF DUP2 PUSH2 0x91F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9F9 DUP2 PUSH2 0x91F JUMP JUMPDEST DUP2 EQ PUSH2 0xA04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA16 DUP2 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA32 JUMPI PUSH2 0xA31 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA40 DUP5 DUP3 DUP6 ADD PUSH2 0xA07 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA5E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0xA6B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0xA78 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x99C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xA89 DUP2 PUSH2 0x8BC JUMP JUMPDEST DUP2 EQ PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAA6 DUP2 PUSH2 0xA80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC2 JUMPI PUSH2 0xAC1 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAD0 DUP5 DUP3 DUP6 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB20 PUSH1 0x20 DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2B DUP3 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB4F DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB90 DUP3 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9B DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBD0 JUMPI PUSH2 0xBCF PUSH2 0xB56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC37 PUSH1 0x26 DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xC42 DUP3 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC66 DUP2 PUSH2 0xC2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xCC4 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xC9F PUSH2 0xB56 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xCAF JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xCBD DUP6 PUSH2 0xC6D JUMP JUMPDEST SWAP5 POP PUSH2 0xC84 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCDD JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH2 0xCEB JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD01 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD0B JUMPI PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD99 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0xB56 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD33 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST POP PUSH2 0xD99 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xD6F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xD6A JUMPI PUSH2 0xD69 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST PUSH2 0xD99 JUMP JUMPDEST PUSH2 0xD7C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xC7A JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD92 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAB DUP3 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB6 DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP3 POP PUSH2 0xDE3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xCCD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF6 DUP3 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE3A JUMPI PUSH2 0xE39 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE9A JUMPI PUSH2 0xE99 PUSH2 0xE45 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xDD 0xE8 PUSH28 0x3AC1AF25D7FBCE77BA1B472E2AADDD87233C11853331D3184B4F531C PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
			"sourceMap": "263:1290:0:-:0;;;398:1;373:26;;437:19;405:51;;539:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;914:32:6;933:12;:10;;;:12;;:::i;:::-;914:18;;;:32;;:::i;:::-;591:9:0;577:11;;:23;;;;;;;;;;;;;;;;;;539:68;263:1290;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2272:187:6:-;2345:16;2364:6;;;;;;;;;;;2345:25;;2389:8;2380:6;;:17;;;;;;;;;;;;;;;;;;2443:8;2412:40;;2433:8;2412:40;;;;;;;;;;;;2335:124;2272:187;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;263:1290:0:-;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@_msgSender_465": {
					"entryPoint": 1755,
					"id": 465,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@_tokenList_31": {
					"entryPoint": 967,
					"id": 31,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@_transferOwnership_1214": {
					"entryPoint": 1763,
					"id": 1214,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@addNewToken_67": {
					"entryPoint": 1018,
					"id": 67,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@multiply_110": {
					"entryPoint": 1704,
					"id": 110,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"@owner_1157": {
					"entryPoint": 1403,
					"id": 1157,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@swapTokenToEvolve_157": {
					"entryPoint": 530,
					"id": 157,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@tokenIndex_20": {
					"entryPoint": 1450,
					"id": 20,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@tokenMarket_26": {
					"entryPoint": 492,
					"id": 26,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@tokenPriceWithUSD_23": {
					"entryPoint": 1444,
					"id": 23,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@transferOwnership_1194": {
					"entryPoint": 1456,
					"id": 1194,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@updateTokenPrice_83": {
					"entryPoint": 1261,
					"id": 83,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_decode_t_address": {
					"entryPoint": 2567,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_bool_fromMemory": {
					"entryPoint": 2711,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_contract$_ERC20_$1021": {
					"entryPoint": 2394,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint256": {
					"entryPoint": 2151,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address": {
					"entryPoint": 2588,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_bool_fromMemory": {
					"entryPoint": 2732,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_contract$_ERC20_$1021": {
					"entryPoint": 2415,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256": {
					"entryPoint": 2290,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256t_uint256": {
					"entryPoint": 2172,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 2
				},
				"abi_encode_t_address_to_t_address_fromStack": {
					"entryPoint": 2502,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_bool_to_t_bool_fromStack": {
					"entryPoint": 2248,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_contract$_ERC20_$1021_to_t_address_fromStack": {
					"entryPoint": 2071,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
					"entryPoint": 3114,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
					"entryPoint": 2835,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_t_uint256_to_t_uint256_fromStack": {
					"entryPoint": 2460,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
					"entryPoint": 2517,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
					"entryPoint": 2633,
					"id": null,
					"parameterSlots": 4,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
					"entryPoint": 2263,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_contract$_ERC20_$1021__to_t_address__fromStack_reversed": {
					"entryPoint": 2086,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
					"entryPoint": 3149,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
					"entryPoint": 2870,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
					"entryPoint": 2475,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
					"entryPoint": 2777,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_add_t_uint256": {
					"entryPoint": 2949,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_div_t_uint256": {
					"entryPoint": 3700,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_exp_helper": {
					"entryPoint": 3194,
					"id": null,
					"parameterSlots": 4,
					"returnSlots": 2
				},
				"checked_exp_t_uint256_t_uint256": {
					"entryPoint": 3488,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_exp_unsigned": {
					"entryPoint": 3277,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"checked_mul_t_uint256": {
					"entryPoint": 3563,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 2335,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_bool": {
					"entryPoint": 2236,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_contract$_ERC20_$1021": {
					"entryPoint": 2353,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 1959,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 2118,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_contract$_ERC20_$1021_to_t_address": {
					"entryPoint": 2053,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_address": {
					"entryPoint": 2035,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_uint160": {
					"entryPoint": 2001,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"identity": {
					"entryPoint": 1991,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"panic_error_0x11": {
					"entryPoint": 2902,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"panic_error_0x12": {
					"entryPoint": 3653,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 2113,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"shift_right_1_unsigned": {
					"entryPoint": 3181,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
					"entryPoint": 3035,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
					"entryPoint": 2794,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_address": {
					"entryPoint": 2544,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_bool": {
					"entryPoint": 2688,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_contract$_ERC20_$1021": {
					"entryPoint": 2371,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_uint256": {
					"entryPoint": 2128,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:12008:8",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "52:81:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "62:65:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "77:5:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "84:42:8",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "73:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "73:54:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "62:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "34:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "44:7:8",
										"type": ""
									}
								],
								"src": "7:126:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "171:28:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "181:12:8",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "188:5:8"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "181:3:8"
												}
											]
										}
									]
								},
								"name": "identity",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "157:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "167:3:8",
										"type": ""
									}
								],
								"src": "139:60:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "265:82:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "275:66:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "333:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "315:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:24:8"
															}
														],
														"functionName": {
															"name": "identity",
															"nodeType": "YulIdentifier",
															"src": "306:8:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "306:34:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "288:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "288:53:8"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "275:9:8"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "245:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "255:9:8",
										"type": ""
									}
								],
								"src": "205:142:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "413:66:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "423:50:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "467:5:8"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "436:30:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "436:37:8"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "423:9:8"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "393:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "403:9:8",
										"type": ""
									}
								],
								"src": "353:126:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "559:66:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "569:50:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "613:5:8"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_address",
													"nodeType": "YulIdentifier",
													"src": "582:30:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "582:37:8"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "569:9:8"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_ERC20_$1021_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "539:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "549:9:8",
										"type": ""
									}
								],
								"src": "485:140:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "710:80:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "727:3:8"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "777:5:8"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_ERC20_$1021_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "732:44:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "732:51:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "720:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "720:64:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "720:64:8"
										}
									]
								},
								"name": "abi_encode_t_contract$_ERC20_$1021_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "698:5:8",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "705:3:8",
										"type": ""
									}
								],
								"src": "631:159:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "908:138:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "918:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "930:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "941:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "926:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "926:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "918:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1012:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1025:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1036:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1021:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1021:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_ERC20_$1021_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "954:57:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "954:85:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "954:85:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_ERC20_$1021__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "880:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "892:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "903:4:8",
										"type": ""
									}
								],
								"src": "796:250:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1092:35:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1102:19:8",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1118:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1112:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1112:9:8"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "1102:6:8"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "1085:6:8",
										"type": ""
									}
								],
								"src": "1052:75:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1222:28:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1239:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1242:1:8",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "1232:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1232:12:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1232:12:8"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "1133:117:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1345:28:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1362:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1365:1:8",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "1355:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1355:12:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1355:12:8"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "1256:117:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1424:32:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1434:16:8",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1445:5:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1434:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1406:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1416:7:8",
										"type": ""
									}
								],
								"src": "1379:77:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1505:79:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1562:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1571:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1574:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1564:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "1564:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1564:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1528:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1553:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1535:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1535:24:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "1525:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1525:35:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1518:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1518:43:8"
											},
											"nodeType": "YulIf",
											"src": "1515:63:8"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1498:5:8",
										"type": ""
									}
								],
								"src": "1462:122:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1642:87:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1652:29:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "1674:6:8"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "1661:12:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1661:20:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1652:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1717:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1690:26:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1690:33:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1690:33:8"
										}
									]
								},
								"name": "abi_decode_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "1620:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "1628:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1636:5:8",
										"type": ""
									}
								],
								"src": "1590:139:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1818:391:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1864:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "1866:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "1866:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1866:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1839:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1848:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1835:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1835:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1860:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1831:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1831:32:8"
											},
											"nodeType": "YulIf",
											"src": "1828:119:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "1957:117:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1972:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1986:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1976:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "2001:63:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2036:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2047:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2056:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "2011:20:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2011:53:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "2001:6:8"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "2084:118:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "2099:16:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2113:2:8",
														"type": "",
														"value": "32"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "2103:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "2129:63:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2164:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2160:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2160:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2184:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "2139:20:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2139:53:8"
													},
													"variableNames": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "2129:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1780:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1791:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1803:6:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "1811:6:8",
										"type": ""
									}
								],
								"src": "1735:474:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2257:48:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2267:32:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2292:5:8"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "2285:6:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2285:13:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2278:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2278:21:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2267:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2239:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2249:7:8",
										"type": ""
									}
								],
								"src": "2215:90:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2370:50:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2387:3:8"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2407:5:8"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "2392:14:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2392:21:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2380:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2380:34:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2380:34:8"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2358:5:8",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "2365:3:8",
										"type": ""
									}
								],
								"src": "2311:109:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2518:118:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2528:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2540:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2551:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2536:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2536:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2528:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2602:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2615:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2626:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2611:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2611:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2564:37:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2564:65:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2564:65:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2490:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2502:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "2513:4:8",
										"type": ""
									}
								],
								"src": "2426:210:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2708:263:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2754:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "2756:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "2756:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2756:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2729:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2738:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "2725:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2725:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2750:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "2721:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2721:32:8"
											},
											"nodeType": "YulIf",
											"src": "2718:119:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "2847:117:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "2862:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2876:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "2866:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "2891:63:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2946:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "2901:20:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2901:53:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "2891:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2678:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "2689:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2701:6:8",
										"type": ""
									}
								],
								"src": "2642:329:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3022:51:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3032:35:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3061:5:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "3043:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3043:24:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "3032:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3004:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "3014:7:8",
										"type": ""
									}
								],
								"src": "2977:96:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3138:51:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3148:35:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3177:5:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_address",
													"nodeType": "YulIdentifier",
													"src": "3159:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3159:24:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "3148:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_contract$_ERC20_$1021",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3120:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "3130:7:8",
										"type": ""
									}
								],
								"src": "3079:110:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3252:93:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3323:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3332:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3335:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "3325:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "3325:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3325:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3275:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3314:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_contract$_ERC20_$1021",
																	"nodeType": "YulIdentifier",
																	"src": "3282:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:38:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "3272:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "3272:49:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "3265:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3265:57:8"
											},
											"nodeType": "YulIf",
											"src": "3262:77:8"
										}
									]
								},
								"name": "validator_revert_t_contract$_ERC20_$1021",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3245:5:8",
										"type": ""
									}
								],
								"src": "3195:150:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3417:101:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3427:29:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "3449:6:8"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "3436:12:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3436:20:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "3427:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3506:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_contract$_ERC20_$1021",
													"nodeType": "YulIdentifier",
													"src": "3465:40:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3465:47:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3465:47:8"
										}
									]
								},
								"name": "abi_decode_t_contract$_ERC20_$1021",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "3395:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "3403:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3411:5:8",
										"type": ""
									}
								],
								"src": "3351:167:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3604:277:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3650:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "3652:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "3652:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3652:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3625:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "3634:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "3621:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "3621:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3646:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "3617:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3617:32:8"
											},
											"nodeType": "YulIf",
											"src": "3614:119:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "3743:131:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3758:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3772:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "3762:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "3787:77:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3836:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3847:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3832:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3832:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3856:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_contract$_ERC20_$1021",
															"nodeType": "YulIdentifier",
															"src": "3797:34:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "3797:67:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "3787:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_contract$_ERC20_$1021",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "3574:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "3585:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "3597:6:8",
										"type": ""
									}
								],
								"src": "3524:357:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3952:53:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "3969:3:8"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3992:5:8"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "3974:17:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "3974:24:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3962:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3962:37:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3962:37:8"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3940:5:8",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "3947:3:8",
										"type": ""
									}
								],
								"src": "3887:118:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4109:124:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4119:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4131:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4142:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4127:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4127:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "4119:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "4199:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4212:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4223:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4208:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "4208:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4155:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4155:71:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4155:71:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4081:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4093:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "4104:4:8",
										"type": ""
									}
								],
								"src": "4011:222:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4304:53:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "4321:3:8"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4344:5:8"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "4326:17:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "4326:24:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "4314:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4314:37:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4314:37:8"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "4292:5:8",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "4299:3:8",
										"type": ""
									}
								],
								"src": "4239:118:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4461:124:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4471:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4483:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4494:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4479:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4479:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "4471:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "4551:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4564:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4575:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4560:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "4560:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4507:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4507:71:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4507:71:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4433:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4445:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "4456:4:8",
										"type": ""
									}
								],
								"src": "4363:222:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4634:79:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "4691:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "4700:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "4703:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "4693:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "4693:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4693:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4657:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4682:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4664:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:24:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "4654:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "4654:35:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "4647:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4647:43:8"
											},
											"nodeType": "YulIf",
											"src": "4644:63:8"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "4627:5:8",
										"type": ""
									}
								],
								"src": "4591:122:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4771:87:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4781:29:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "4803:6:8"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "4790:12:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4790:20:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "4781:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "4846:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "4819:26:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4819:33:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4819:33:8"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "4749:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "4757:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "4765:5:8",
										"type": ""
									}
								],
								"src": "4719:139:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4930:263:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "4976:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "4978:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "4978:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4978:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "4951:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4960:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "4947:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "4947:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4972:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "4943:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4943:32:8"
											},
											"nodeType": "YulIf",
											"src": "4940:119:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "5069:117:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "5084:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5098:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "5088:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "5113:63:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5148:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5159:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5144:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5144:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "5168:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "5123:20:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "5123:53:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "5113:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4900:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "4911:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4923:6:8",
										"type": ""
									}
								],
								"src": "4864:329:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5353:288:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5363:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5375:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5386:2:8",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5371:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5371:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "5363:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "5443:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "5456:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5467:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5452:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "5452:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "5399:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5399:71:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5399:71:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "5524:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "5537:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5548:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5533:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "5533:18:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "5480:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5480:72:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5480:72:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value2",
														"nodeType": "YulIdentifier",
														"src": "5606:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "5619:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:2:8",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5615:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "5615:18:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "5562:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5562:72:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5562:72:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "5309:9:8",
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
										"src": "5321:6:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "5329:6:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "5337:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "5348:4:8",
										"type": ""
									}
								],
								"src": "5199:442:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5687:76:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "5741:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "5750:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "5753:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "5743:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "5743:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "5743:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5710:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5732:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5717:14:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5717:21:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "5707:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "5707:32:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "5700:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5700:40:8"
											},
											"nodeType": "YulIf",
											"src": "5697:60:8"
										}
									]
								},
								"name": "validator_revert_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "5680:5:8",
										"type": ""
									}
								],
								"src": "5647:116:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5829:77:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5839:22:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "5854:6:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "5848:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5848:13:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "5839:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "5894:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_bool",
													"nodeType": "YulIdentifier",
													"src": "5870:23:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5870:30:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5870:30:8"
										}
									]
								},
								"name": "abi_decode_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "5807:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "5815:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "5823:5:8",
										"type": ""
									}
								],
								"src": "5769:137:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5986:271:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6032:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "6034:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "6034:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "6034:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "6007:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "6016:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "6003:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "6003:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6028:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "5999:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5999:32:8"
											},
											"nodeType": "YulIf",
											"src": "5996:119:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "6125:125:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "6140:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6154:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "6144:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "6169:71:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6212:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6223:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6208:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "6232:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_bool_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "6179:28:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "6179:61:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "6169:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "5956:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "5967:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "5979:6:8",
										"type": ""
									}
								],
								"src": "5912:345:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6359:73:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "6376:3:8"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "6381:6:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "6369:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6369:19:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "6369:19:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "6397:29:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "6416:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6421:4:8",
														"type": "",
														"value": "0x20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6412:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6412:14:8"
											},
											"variableNames": [
												{
													"name": "updated_pos",
													"nodeType": "YulIdentifier",
													"src": "6397:11:8"
												}
											]
										}
									]
								},
								"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "6331:3:8",
										"type": ""
									},
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "6336:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "updated_pos",
										"nodeType": "YulTypedName",
										"src": "6347:11:8",
										"type": ""
									}
								],
								"src": "6263:169:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6544:76:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6566:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6574:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "6562:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "6562:14:8"
													},
													{
														"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "6578:34:8",
														"type": "",
														"value": "Ownable: caller is not the owner"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "6555:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6555:58:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "6555:58:8"
										}
									]
								},
								"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "6536:6:8",
										"type": ""
									}
								],
								"src": "6438:182:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6772:220:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6782:74:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "6848:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6853:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "6789:58:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6789:67:8"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "6782:3:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "6954:3:8"
													}
												],
												"functionName": {
													"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
													"nodeType": "YulIdentifier",
													"src": "6865:88:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6865:93:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "6865:93:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "6967:19:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "6978:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6983:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6974:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6974:12:8"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "6967:3:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "6760:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "6768:3:8",
										"type": ""
									}
								],
								"src": "6626:366:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7169:248:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "7179:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "7191:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7202:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7187:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "7187:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "7179:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "7226:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7237:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "7222:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "7222:17:8"
													},
													{
														"arguments": [
															{
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "7245:4:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "7251:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "7241:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "7241:20:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "7215:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "7215:47:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7215:47:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "7271:139:8",
											"value": {
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "7405:4:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "7279:124:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "7279:131:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "7271:4:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "7149:9:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "7164:4:8",
										"type": ""
									}
								],
								"src": "6998:419:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7451:152:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7468:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7471:77:8",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "7461:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "7461:88:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7461:88:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7565:1:8",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7568:4:8",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "7558:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "7558:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7558:15:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7589:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7592:4:8",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "7582:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "7582:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7582:15:8"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "7423:180:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7653:261:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "7663:25:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "7686:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7668:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "7668:20:8"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "7663:1:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7697:25:8",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "7720:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7702:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "7702:20:8"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "7697:1:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7860:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "7862:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "7862:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "7862:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "7781:1:8"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7788:66:8",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															},
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "7856:1:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "7784:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "7784:74:8"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "7778:2:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "7778:81:8"
											},
											"nodeType": "YulIf",
											"src": "7775:107:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "7892:16:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "7903:1:8"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "7906:1:8"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7899:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "7899:9:8"
											},
											"variableNames": [
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "7892:3:8"
												}
											]
										}
									]
								},
								"name": "checked_add_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "7640:1:8",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "7643:1:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "sum",
										"nodeType": "YulTypedName",
										"src": "7649:3:8",
										"type": ""
									}
								],
								"src": "7609:305:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8026:119:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "8048:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8056:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "8044:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "8044:14:8"
													},
													{
														"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "8060:34:8",
														"type": "",
														"value": "Ownable: new owner is the zero a"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "8037:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8037:58:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "8037:58:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "8116:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8124:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "8112:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "8112:15:8"
													},
													{
														"hexValue": "646472657373",
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "8129:8:8",
														"type": "",
														"value": "ddress"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "8105:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8105:33:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "8105:33:8"
										}
									]
								},
								"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "8018:6:8",
										"type": ""
									}
								],
								"src": "7920:225:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8297:220:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "8307:74:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "8373:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8378:2:8",
														"type": "",
														"value": "38"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "8314:58:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8314:67:8"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "8307:3:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "8479:3:8"
													}
												],
												"functionName": {
													"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
													"nodeType": "YulIdentifier",
													"src": "8390:88:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8390:93:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "8390:93:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "8492:19:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "8503:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8508:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8499:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8499:12:8"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "8492:3:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "8285:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "8293:3:8",
										"type": ""
									}
								],
								"src": "8151:366:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8694:248:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "8704:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "8716:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8727:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8712:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8712:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "8704:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "8751:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8762:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "8747:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "8747:17:8"
													},
													{
														"arguments": [
															{
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "8770:4:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "8776:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "8766:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "8766:20:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "8740:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8740:47:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "8740:47:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "8796:139:8",
											"value": {
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "8930:4:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "8804:124:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8804:131:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "8796:4:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "8674:9:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "8689:4:8",
										"type": ""
									}
								],
								"src": "8523:419:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8999:51:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "9009:34:8",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9034:1:8",
														"type": "",
														"value": "1"
													},
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "9037:5:8"
													}
												],
												"functionName": {
													"name": "shr",
													"nodeType": "YulIdentifier",
													"src": "9030:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9030:13:8"
											},
											"variableNames": [
												{
													"name": "newValue",
													"nodeType": "YulIdentifier",
													"src": "9009:8:8"
												}
											]
										}
									]
								},
								"name": "shift_right_1_unsigned",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "8980:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "newValue",
										"nodeType": "YulTypedName",
										"src": "8990:8:8",
										"type": ""
									}
								],
								"src": "8948:102:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9129:775:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "9139:15:8",
											"value": {
												"name": "_power",
												"nodeType": "YulIdentifier",
												"src": "9148:6:8"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "9139:5:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "9163:14:8",
											"value": {
												"name": "_base",
												"nodeType": "YulIdentifier",
												"src": "9172:5:8"
											},
											"variableNames": [
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "9163:4:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "9221:677:8",
												"statements": [
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "9309:22:8",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"functionName": {
																			"name": "panic_error_0x11",
																			"nodeType": "YulIdentifier",
																			"src": "9311:16:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9311:18:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9311:18:8"
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "9287:4:8"
																},
																{
																	"arguments": [
																		{
																			"name": "max",
																			"nodeType": "YulIdentifier",
																			"src": "9297:3:8"
																		},
																		{
																			"name": "base",
																			"nodeType": "YulIdentifier",
																			"src": "9302:4:8"
																		}
																	],
																	"functionName": {
																		"name": "div",
																		"nodeType": "YulIdentifier",
																		"src": "9293:3:8"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "9293:14:8"
																}
															],
															"functionName": {
																"name": "gt",
																"nodeType": "YulIdentifier",
																"src": "9284:2:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "9284:24:8"
														},
														"nodeType": "YulIf",
														"src": "9281:50:8"
													},
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "9376:419:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "9756:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "9769:5:8"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "9776:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "9765:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9765:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "power",
																			"nodeType": "YulIdentifier",
																			"src": "9756:5:8"
																		}
																	]
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "9351:8:8"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "9361:1:8",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "9347:3:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "9347:16:8"
														},
														"nodeType": "YulIf",
														"src": "9344:451:8"
													},
													{
														"nodeType": "YulAssignment",
														"src": "9808:23:8",
														"value": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:8"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "9826:4:8"
																}
															],
															"functionName": {
																"name": "mul",
																"nodeType": "YulIdentifier",
																"src": "9816:3:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "9816:15:8"
														},
														"variableNames": [
															{
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "9808:4:8"
															}
														]
													},
													{
														"nodeType": "YulAssignment",
														"src": "9844:44:8",
														"value": {
															"arguments": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "9879:8:8"
																}
															],
															"functionName": {
																"name": "shift_right_1_unsigned",
																"nodeType": "YulIdentifier",
																"src": "9856:22:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "9856:32:8"
														},
														"variableNames": [
															{
																"name": "exponent",
																"nodeType": "YulIdentifier",
																"src": "9844:8:8"
															}
														]
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "9197:8:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9207:1:8",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "9194:2:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9194:15:8"
											},
											"nodeType": "YulForLoop",
											"post": {
												"nodeType": "YulBlock",
												"src": "9210:2:8",
												"statements": []
											},
											"pre": {
												"nodeType": "YulBlock",
												"src": "9190:3:8",
												"statements": []
											},
											"src": "9186:712:8"
										}
									]
								},
								"name": "checked_exp_helper",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "_power",
										"nodeType": "YulTypedName",
										"src": "9084:6:8",
										"type": ""
									},
									{
										"name": "_base",
										"nodeType": "YulTypedName",
										"src": "9092:5:8",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "9099:8:8",
										"type": ""
									},
									{
										"name": "max",
										"nodeType": "YulTypedName",
										"src": "9109:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "9117:5:8",
										"type": ""
									},
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "9124:4:8",
										"type": ""
									}
								],
								"src": "9056:848:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9970:1013:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "10165:20:8",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "10167:10:8",
														"value": {
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10176:1:8",
															"type": "",
															"value": "1"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "10167:5:8"
															}
														]
													},
													{
														"nodeType": "YulLeave",
														"src": "10178:5:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "10155:8:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "10148:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10148:16:8"
											},
											"nodeType": "YulIf",
											"src": "10145:40:8"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "10210:20:8",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "10212:10:8",
														"value": {
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10221:1:8",
															"type": "",
															"value": "0"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "10212:5:8"
															}
														]
													},
													{
														"nodeType": "YulLeave",
														"src": "10223:5:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "10204:4:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "10197:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10197:12:8"
											},
											"nodeType": "YulIf",
											"src": "10194:36:8"
										},
										{
											"cases": [
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "10340:20:8",
														"statements": [
															{
																"nodeType": "YulAssignment",
																"src": "10342:10:8",
																"value": {
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "10351:1:8",
																	"type": "",
																	"value": "1"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "10342:5:8"
																	}
																]
															},
															{
																"nodeType": "YulLeave",
																"src": "10353:5:8"
															}
														]
													},
													"nodeType": "YulCase",
													"src": "10333:27:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "10338:1:8",
														"type": "",
														"value": "1"
													}
												},
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "10384:176:8",
														"statements": [
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "10419:22:8",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [],
																				"functionName": {
																					"name": "panic_error_0x11",
																					"nodeType": "YulIdentifier",
																					"src": "10421:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10421:18:8"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "10421:18:8"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"name": "exponent",
																			"nodeType": "YulIdentifier",
																			"src": "10404:8:8"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10414:3:8",
																			"type": "",
																			"value": "255"
																		}
																	],
																	"functionName": {
																		"name": "gt",
																		"nodeType": "YulIdentifier",
																		"src": "10401:2:8"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "10401:17:8"
																},
																"nodeType": "YulIf",
																"src": "10398:43:8"
															},
															{
																"nodeType": "YulAssignment",
																"src": "10454:25:8",
																"value": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10467:1:8",
																			"type": "",
																			"value": "2"
																		},
																		{
																			"name": "exponent",
																			"nodeType": "YulIdentifier",
																			"src": "10470:8:8"
																		}
																	],
																	"functionName": {
																		"name": "exp",
																		"nodeType": "YulIdentifier",
																		"src": "10463:3:8"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "10463:16:8"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "10454:5:8"
																	}
																]
															},
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "10510:22:8",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [],
																				"functionName": {
																					"name": "panic_error_0x11",
																					"nodeType": "YulIdentifier",
																					"src": "10512:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10512:18:8"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "10512:18:8"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"name": "power",
																			"nodeType": "YulIdentifier",
																			"src": "10498:5:8"
																		},
																		{
																			"name": "max",
																			"nodeType": "YulIdentifier",
																			"src": "10505:3:8"
																		}
																	],
																	"functionName": {
																		"name": "gt",
																		"nodeType": "YulIdentifier",
																		"src": "10495:2:8"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "10495:14:8"
																},
																"nodeType": "YulIf",
																"src": "10492:40:8"
															},
															{
																"nodeType": "YulLeave",
																"src": "10545:5:8"
															}
														]
													},
													"nodeType": "YulCase",
													"src": "10369:191:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "10374:1:8",
														"type": "",
														"value": "2"
													}
												}
											],
											"expression": {
												"name": "base",
												"nodeType": "YulIdentifier",
												"src": "10290:4:8"
											},
											"nodeType": "YulSwitch",
											"src": "10283:277:8"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "10692:123:8",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "10706:28:8",
														"value": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "10719:4:8"
																},
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "10725:8:8"
																}
															],
															"functionName": {
																"name": "exp",
																"nodeType": "YulIdentifier",
																"src": "10715:3:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "10715:19:8"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "10706:5:8"
															}
														]
													},
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "10765:22:8",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"functionName": {
																			"name": "panic_error_0x11",
																			"nodeType": "YulIdentifier",
																			"src": "10767:16:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10767:18:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10767:18:8"
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "10753:5:8"
																},
																{
																	"name": "max",
																	"nodeType": "YulIdentifier",
																	"src": "10760:3:8"
																}
															],
															"functionName": {
																"name": "gt",
																"nodeType": "YulIdentifier",
																"src": "10750:2:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "10750:14:8"
														},
														"nodeType": "YulIf",
														"src": "10747:40:8"
													},
													{
														"nodeType": "YulLeave",
														"src": "10800:5:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10595:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10601:2:8",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10592:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10592:12:8"
															},
															{
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10609:8:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10619:2:8",
																		"type": "",
																		"value": "78"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10606:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:16:8"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "10588:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "10588:35:8"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10644:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10650:3:8",
																		"type": "",
																		"value": "307"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10641:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10641:13:8"
															},
															{
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10659:8:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10669:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10656:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10656:16:8"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "10637:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "10637:36:8"
													}
												],
												"functionName": {
													"name": "or",
													"nodeType": "YulIdentifier",
													"src": "10572:2:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10572:111:8"
											},
											"nodeType": "YulIf",
											"src": "10569:246:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "10825:57:8",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "10859:1:8",
														"type": "",
														"value": "1"
													},
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "10862:4:8"
													},
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "10868:8:8"
													},
													{
														"name": "max",
														"nodeType": "YulIdentifier",
														"src": "10878:3:8"
													}
												],
												"functionName": {
													"name": "checked_exp_helper",
													"nodeType": "YulIdentifier",
													"src": "10840:18:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10840:42:8"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "10825:5:8"
												},
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "10832:4:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "10921:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "10923:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "10923:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "10923:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "power",
														"nodeType": "YulIdentifier",
														"src": "10898:5:8"
													},
													{
														"arguments": [
															{
																"name": "max",
																"nodeType": "YulIdentifier",
																"src": "10909:3:8"
															},
															{
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "10914:4:8"
															}
														],
														"functionName": {
															"name": "div",
															"nodeType": "YulIdentifier",
															"src": "10905:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "10905:14:8"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "10895:2:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10895:25:8"
											},
											"nodeType": "YulIf",
											"src": "10892:51:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "10952:25:8",
											"value": {
												"arguments": [
													{
														"name": "power",
														"nodeType": "YulIdentifier",
														"src": "10965:5:8"
													},
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "10972:4:8"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "10961:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10961:16:8"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "10952:5:8"
												}
											]
										}
									]
								},
								"name": "checked_exp_unsigned",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "9940:4:8",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "9946:8:8",
										"type": ""
									},
									{
										"name": "max",
										"nodeType": "YulTypedName",
										"src": "9956:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "9964:5:8",
										"type": ""
									}
								],
								"src": "9910:1073:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "11055:219:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "11065:31:8",
											"value": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "11091:4:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "11073:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11073:23:8"
											},
											"variableNames": [
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "11065:4:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "11105:39:8",
											"value": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "11135:8:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "11117:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11117:27:8"
											},
											"variableNames": [
												{
													"name": "exponent",
													"nodeType": "YulIdentifier",
													"src": "11105:8:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "11154:113:8",
											"value": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "11184:4:8"
													},
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "11190:8:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11200:66:8",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "checked_exp_unsigned",
													"nodeType": "YulIdentifier",
													"src": "11163:20:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11163:104:8"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "11154:5:8"
												}
											]
										}
									]
								},
								"name": "checked_exp_t_uint256_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "11030:4:8",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "11036:8:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "11049:5:8",
										"type": ""
									}
								],
								"src": "10989:285:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "11328:300:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "11338:25:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "11361:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "11343:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11343:20:8"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "11338:1:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "11372:25:8",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "11395:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "11377:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11377:20:8"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "11372:1:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "11570:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "11572:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "11572:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "11572:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11482:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11475:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11475:9:8"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "11468:6:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "11468:17:8"
													},
													{
														"arguments": [
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "11490:1:8"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11497:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11565:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11493:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11493:74:8"
															}
														],
														"functionName": {
															"name": "gt",
															"nodeType": "YulIdentifier",
															"src": "11487:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "11487:81:8"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "11464:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11464:105:8"
											},
											"nodeType": "YulIf",
											"src": "11461:131:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "11602:20:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "11617:1:8"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "11620:1:8"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "11613:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11613:9:8"
											},
											"variableNames": [
												{
													"name": "product",
													"nodeType": "YulIdentifier",
													"src": "11602:7:8"
												}
											]
										}
									]
								},
								"name": "checked_mul_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "11311:1:8",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "11314:1:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "product",
										"nodeType": "YulTypedName",
										"src": "11320:7:8",
										"type": ""
									}
								],
								"src": "11280:348:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "11662:152:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11679:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11682:77:8",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "11672:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11672:88:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "11672:88:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11776:1:8",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11779:4:8",
														"type": "",
														"value": "0x12"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "11769:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11769:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "11769:15:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11800:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11803:4:8",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "11793:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11793:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "11793:15:8"
										}
									]
								},
								"name": "panic_error_0x12",
								"nodeType": "YulFunctionDefinition",
								"src": "11634:180:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "11862:143:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "11872:25:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "11895:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "11877:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11877:20:8"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "11872:1:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "11906:25:8",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "11929:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "11911:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11911:20:8"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "11906:1:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "11953:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x12",
																"nodeType": "YulIdentifier",
																"src": "11955:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "11955:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "11955:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "11950:1:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "11943:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11943:9:8"
											},
											"nodeType": "YulIf",
											"src": "11940:35:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "11985:14:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "11994:1:8"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "11997:1:8"
													}
												],
												"functionName": {
													"name": "div",
													"nodeType": "YulIdentifier",
													"src": "11990:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11990:9:8"
											},
											"variableNames": [
												{
													"name": "r",
													"nodeType": "YulIdentifier",
													"src": "11985:1:8"
												}
											]
										}
									]
								},
								"name": "checked_div_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "11851:1:8",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "11854:1:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "r",
										"nodeType": "YulTypedName",
										"src": "11860:1:8",
										"type": ""
									}
								],
								"src": "11820:185:8"
							}
						]
					},
					"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$1021_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$1021_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$1021_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$1021__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$1021_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$1021(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$1021(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$1021(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$1021(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ERC20_$1021(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$1021(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$1021(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
					"id": 8,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063676c0d7711610066578063676c0d77146101465780638da5cb5b14610176578063be39f1af14610194578063d55f9273146101b2578063f2fde38b146101d057610093565b80630f323484146100985780631a909cd5146100b65780634eb6b067146100e657806364db444a14610116575b600080fd5b6100a06101ec565b6040516100ad9190610826565b60405180910390f35b6100d060048036038101906100cb919061087c565b610212565b6040516100dd91906108d7565b60405180910390f35b61010060048036038101906100fb91906108f2565b6103c7565b60405161010d9190610826565b60405180910390f35b610130600480360381019061012b919061096f565b6103fa565b60405161013d91906109ab565b60405180910390f35b610160600480360381019061015b91906108f2565b6104ed565b60405161016d91906108d7565b60405180910390f35b61017e61057b565b60405161018b91906109d5565b60405180910390f35b61019c6105a4565b6040516101a991906109ab565b60405180910390f35b6101ba6105aa565b6040516101c791906109ab565b60405180910390f35b6101ea60048036038101906101e59190610a1c565b6105b0565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600061025b8560025460126106a8565b90508173ffffffffffffffffffffffffffffffffffffffff166323b872dd6102816106db565b61028961057b565b846040518463ffffffff1660e01b81526004016102a893929190610a49565b602060405180830381600087803b1580156102c257600080fd5b505af11580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610aac565b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd61034161057b565b6103496106db565b886040518463ffffffff1660e01b815260040161036893929190610a49565b602060405180830381600087803b15801561038257600080fd5b505af1158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610aac565b5060019250505092915050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006104046106db565b73ffffffffffffffffffffffffffffffffffffffff1661042261057b565b73ffffffffffffffffffffffffffffffffffffffff1614610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f90610b36565b60405180910390fd5b6001549050816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008282546104e19190610b85565b92505081905550919050565b60006104f76106db565b73ffffffffffffffffffffffffffffffffffffffff1661051561057b565b73ffffffffffffffffffffffffffffffffffffffff161461056b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056290610b36565b60405180910390fd5b8160028190555060019050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b60015481565b6105b86106db565b73ffffffffffffffffffffffffffffffffffffffff166105d661057b565b73ffffffffffffffffffffffffffffffffffffffff161461062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390610b36565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069390610c4d565b60405180910390fd5b6106a5816106e3565b50565b60008082600a6106b89190610da0565b84866106c49190610deb565b6106ce9190610e74565b9050809150509392505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107ec6107e76107e2846107a7565b6107c7565b6107a7565b9050919050565b60006107fe826107d1565b9050919050565b6000610810826107f3565b9050919050565b61082081610805565b82525050565b600060208201905061083b6000830184610817565b92915050565b600080fd5b6000819050919050565b61085981610846565b811461086457600080fd5b50565b60008135905061087681610850565b92915050565b6000806040838503121561089357610892610841565b5b60006108a185828601610867565b92505060206108b285828601610867565b9150509250929050565b60008115159050919050565b6108d1816108bc565b82525050565b60006020820190506108ec60008301846108c8565b92915050565b60006020828403121561090857610907610841565b5b600061091684828501610867565b91505092915050565b600061092a826107a7565b9050919050565b600061093c8261091f565b9050919050565b61094c81610931565b811461095757600080fd5b50565b60008135905061096981610943565b92915050565b60006020828403121561098557610984610841565b5b60006109938482850161095a565b91505092915050565b6109a581610846565b82525050565b60006020820190506109c0600083018461099c565b92915050565b6109cf8161091f565b82525050565b60006020820190506109ea60008301846109c6565b92915050565b6109f98161091f565b8114610a0457600080fd5b50565b600081359050610a16816109f0565b92915050565b600060208284031215610a3257610a31610841565b5b6000610a4084828501610a07565b91505092915050565b6000606082019050610a5e60008301866109c6565b610a6b60208301856109c6565b610a78604083018461099c565b949350505050565b610a89816108bc565b8114610a9457600080fd5b50565b600081519050610aa681610a80565b92915050565b600060208284031215610ac257610ac1610841565b5b6000610ad084828501610a97565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b20602083610ad9565b9150610b2b82610aea565b602082019050919050565b60006020820190508181036000830152610b4f81610b13565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b9082610846565b9150610b9b83610846565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bd057610bcf610b56565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c37602683610ad9565b9150610c4282610bdb565b604082019050919050565b60006020820190508181036000830152610c6681610c2a565b9050919050565b60008160011c9050919050565b6000808291508390505b6001851115610cc457808604811115610ca057610c9f610b56565b5b6001851615610caf5780820291505b8081029050610cbd85610c6d565b9450610c84565b94509492505050565b600082610cdd5760019050610d99565b81610ceb5760009050610d99565b8160018114610d015760028114610d0b57610d3a565b6001915050610d99565b60ff841115610d1d57610d1c610b56565b5b8360020a915084821115610d3457610d33610b56565b5b50610d99565b5060208310610133831016604e8410600b8410161715610d6f5782820a905083811115610d6a57610d69610b56565b5b610d99565b610d7c8484846001610c7a565b92509050818404811115610d9357610d92610b56565b5b81810290505b9392505050565b6000610dab82610846565b9150610db683610846565b9250610de37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610ccd565b905092915050565b6000610df682610846565b9150610e0183610846565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e3a57610e39610b56565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7f82610846565b9150610e8a83610846565b925082610e9a57610e99610e45565b5b82820490509291505056fea264697066735822122018dde87b3ac1af25d7fbce77ba1b472e2aaddd87233c11853331d3184b4f531c64736f6c63430008090033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x676C0D77 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x676C0D77 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xBE39F1AF EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xD55F9273 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0xF323484 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x1A909CD5 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x4EB6B067 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x64DB444A EQ PUSH2 0x116 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x96F JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xA1C JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x25B DUP6 PUSH1 0x2 SLOAD PUSH1 0x12 PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x281 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x289 PUSH2 0x57B JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x341 PUSH2 0x57B JUMP JUMPDEST PUSH2 0x349 PUSH2 0x6DB JUMP JUMPDEST DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 PUSH2 0x6DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x422 PUSH2 0x57B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 PUSH2 0x6DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x515 PUSH2 0x57B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x56B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x562 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0x6DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D6 PUSH2 0x57B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x693 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6A5 DUP2 PUSH2 0x6E3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xA PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP5 DUP7 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EC PUSH2 0x7E7 PUSH2 0x7E2 DUP5 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FE DUP3 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x810 DUP3 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x820 DUP2 PUSH2 0x805 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x83B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x817 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x859 DUP2 PUSH2 0x846 JUMP JUMPDEST DUP2 EQ PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x876 DUP2 PUSH2 0x850 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x893 JUMPI PUSH2 0x892 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A1 DUP6 DUP3 DUP7 ADD PUSH2 0x867 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8B2 DUP6 DUP3 DUP7 ADD PUSH2 0x867 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D1 DUP2 PUSH2 0x8BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x908 JUMPI PUSH2 0x907 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x916 DUP5 DUP3 DUP6 ADD PUSH2 0x867 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92A DUP3 PUSH2 0x7A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94C DUP2 PUSH2 0x931 JUMP JUMPDEST DUP2 EQ PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x969 DUP2 PUSH2 0x943 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x985 JUMPI PUSH2 0x984 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x993 DUP5 DUP3 DUP6 ADD PUSH2 0x95A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9A5 DUP2 PUSH2 0x846 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x99C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9CF DUP2 PUSH2 0x91F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9F9 DUP2 PUSH2 0x91F JUMP JUMPDEST DUP2 EQ PUSH2 0xA04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA16 DUP2 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA32 JUMPI PUSH2 0xA31 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA40 DUP5 DUP3 DUP6 ADD PUSH2 0xA07 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA5E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0xA6B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0xA78 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x99C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xA89 DUP2 PUSH2 0x8BC JUMP JUMPDEST DUP2 EQ PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAA6 DUP2 PUSH2 0xA80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC2 JUMPI PUSH2 0xAC1 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAD0 DUP5 DUP3 DUP6 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB20 PUSH1 0x20 DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2B DUP3 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB4F DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB90 DUP3 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9B DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBD0 JUMPI PUSH2 0xBCF PUSH2 0xB56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC37 PUSH1 0x26 DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xC42 DUP3 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC66 DUP2 PUSH2 0xC2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xCC4 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xC9F PUSH2 0xB56 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xCAF JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xCBD DUP6 PUSH2 0xC6D JUMP JUMPDEST SWAP5 POP PUSH2 0xC84 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCDD JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH2 0xCEB JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD01 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD0B JUMPI PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD99 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0xB56 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD33 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST POP PUSH2 0xD99 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xD6F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xD6A JUMPI PUSH2 0xD69 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST PUSH2 0xD99 JUMP JUMPDEST PUSH2 0xD7C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xC7A JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD92 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAB DUP3 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB6 DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP3 POP PUSH2 0xDE3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xCCD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF6 DUP3 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE3A JUMPI PUSH2 0xE39 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE9A JUMPI PUSH2 0xE99 PUSH2 0xE45 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xDD 0xE8 PUSH28 0x3AC1AF25D7FBCE77BA1B472E2AADDD87233C11853331D3184B4F531C PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
			"sourceMap": "263:1290:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1138:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;492:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;613:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;812:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1029:85:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:51:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;373:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:198:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;462:24:0;;;;;;;;;;;;;:::o;1138:405::-;1224:4;1239:18;1260:10;:23;1271:11;1260:23;;;;;;;;;;;;;;;;;;;;;1239:44;;1293:25;1321:46;1330:13;1344:17;;1364:2;1321:8;:46::i;:::-;1293:74;;1377:12;:25;;;1403:12;:10;:12::i;:::-;1417:7;:5;:7::i;:::-;1426:17;1377:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1454:11;;;;;;;;;;;:24;;;1479:7;:5;:7::i;:::-;1487:12;:10;:12::i;:::-;1501:13;1454:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1532:4;1525:11;;;;1138:405;;;;:::o;492:40::-;;;;;;;;;;;;;;;;;;;;;;:::o;613:193::-;677:16;1252:12:6;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;719:10:0::1;;705:24;;765:9;739:10;:23;750:11;739:23;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;798:1;784:10:::0;::::1;:15;;;;;;;:::i;:::-;;;;;;;;613:193:::0;;;:::o;812:153::-;886:4;1252:12:6;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;921:16:0::1;901:17;:36;;;;954:4;947:11;;812:153:::0;;;:::o;1029:85:6:-;1075:7;1101:6;;;;;;;;;;;1094:13;;1029:85;:::o;405:51:0:-;;;;:::o;373:26::-;;;;:::o;1920:198:6:-;1252:12;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2028:1:::1;2008:22;;:8;:22;;;;2000:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2083:28;2102:8;2083:18;:28::i;:::-;1920:198:::0;:::o;971:160:0:-;1047:7;1065:11;1091:8;1086:2;:14;;;;:::i;:::-;1082:1;1080;:3;;;;:::i;:::-;1079:22;;;;:::i;:::-;1065:36;;1118:6;1111:13;;;971:160;;;;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;2272:187:6:-;2345:16;2364:6;;;;;;;;;;;2345:25;;2389:8;2380:6;;:17;;;;;;;;;;;;;;;;;;2443:8;2412:40;;2433:8;2412:40;;;;;;;;;;;;2335:124;2272:187;:::o;7:126:8:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1133:117::-;1242:1;1239;1232:12;1379:77;1416:7;1445:5;1434:16;;1379:77;;;:::o;1462:122::-;1535:24;1553:5;1535:24;:::i;:::-;1528:5;1525:35;1515:63;;1574:1;1571;1564:12;1515:63;1462:122;:::o;1590:139::-;1636:5;1674:6;1661:20;1652:29;;1690:33;1717:5;1690:33;:::i;:::-;1590:139;;;;:::o;1735:474::-;1803:6;1811;1860:2;1848:9;1839:7;1835:23;1831:32;1828:119;;;1866:79;;:::i;:::-;1828:119;1986:1;2011:53;2056:7;2047:6;2036:9;2032:22;2011:53;:::i;:::-;2001:63;;1957:117;2113:2;2139:53;2184:7;2175:6;2164:9;2160:22;2139:53;:::i;:::-;2129:63;;2084:118;1735:474;;;;;:::o;2215:90::-;2249:7;2292:5;2285:13;2278:21;2267:32;;2215:90;;;:::o;2311:109::-;2392:21;2407:5;2392:21;:::i;:::-;2387:3;2380:34;2311:109;;:::o;2426:210::-;2513:4;2551:2;2540:9;2536:18;2528:26;;2564:65;2626:1;2615:9;2611:17;2602:6;2564:65;:::i;:::-;2426:210;;;;:::o;2642:329::-;2701:6;2750:2;2738:9;2729:7;2725:23;2721:32;2718:119;;;2756:79;;:::i;:::-;2718:119;2876:1;2901:53;2946:7;2937:6;2926:9;2922:22;2901:53;:::i;:::-;2891:63;;2847:117;2642:329;;;;:::o;2977:96::-;3014:7;3043:24;3061:5;3043:24;:::i;:::-;3032:35;;2977:96;;;:::o;3079:110::-;3130:7;3159:24;3177:5;3159:24;:::i;:::-;3148:35;;3079:110;;;:::o;3195:150::-;3282:38;3314:5;3282:38;:::i;:::-;3275:5;3272:49;3262:77;;3335:1;3332;3325:12;3262:77;3195:150;:::o;3351:167::-;3411:5;3449:6;3436:20;3427:29;;3465:47;3506:5;3465:47;:::i;:::-;3351:167;;;;:::o;3524:357::-;3597:6;3646:2;3634:9;3625:7;3621:23;3617:32;3614:119;;;3652:79;;:::i;:::-;3614:119;3772:1;3797:67;3856:7;3847:6;3836:9;3832:22;3797:67;:::i;:::-;3787:77;;3743:131;3524:357;;;;:::o;3887:118::-;3974:24;3992:5;3974:24;:::i;:::-;3969:3;3962:37;3887:118;;:::o;4011:222::-;4104:4;4142:2;4131:9;4127:18;4119:26;;4155:71;4223:1;4212:9;4208:17;4199:6;4155:71;:::i;:::-;4011:222;;;;:::o;4239:118::-;4326:24;4344:5;4326:24;:::i;:::-;4321:3;4314:37;4239:118;;:::o;4363:222::-;4456:4;4494:2;4483:9;4479:18;4471:26;;4507:71;4575:1;4564:9;4560:17;4551:6;4507:71;:::i;:::-;4363:222;;;;:::o;4591:122::-;4664:24;4682:5;4664:24;:::i;:::-;4657:5;4654:35;4644:63;;4703:1;4700;4693:12;4644:63;4591:122;:::o;4719:139::-;4765:5;4803:6;4790:20;4781:29;;4819:33;4846:5;4819:33;:::i;:::-;4719:139;;;;:::o;4864:329::-;4923:6;4972:2;4960:9;4951:7;4947:23;4943:32;4940:119;;;4978:79;;:::i;:::-;4940:119;5098:1;5123:53;5168:7;5159:6;5148:9;5144:22;5123:53;:::i;:::-;5113:63;;5069:117;4864:329;;;;:::o;5199:442::-;5348:4;5386:2;5375:9;5371:18;5363:26;;5399:71;5467:1;5456:9;5452:17;5443:6;5399:71;:::i;:::-;5480:72;5548:2;5537:9;5533:18;5524:6;5480:72;:::i;:::-;5562;5630:2;5619:9;5615:18;5606:6;5562:72;:::i;:::-;5199:442;;;;;;:::o;5647:116::-;5717:21;5732:5;5717:21;:::i;:::-;5710:5;5707:32;5697:60;;5753:1;5750;5743:12;5697:60;5647:116;:::o;5769:137::-;5823:5;5854:6;5848:13;5839:22;;5870:30;5894:5;5870:30;:::i;:::-;5769:137;;;;:::o;5912:345::-;5979:6;6028:2;6016:9;6007:7;6003:23;5999:32;5996:119;;;6034:79;;:::i;:::-;5996:119;6154:1;6179:61;6232:7;6223:6;6212:9;6208:22;6179:61;:::i;:::-;6169:71;;6125:125;5912:345;;;;:::o;6263:169::-;6347:11;6381:6;6376:3;6369:19;6421:4;6416:3;6412:14;6397:29;;6263:169;;;;:::o;6438:182::-;6578:34;6574:1;6566:6;6562:14;6555:58;6438:182;:::o;6626:366::-;6768:3;6789:67;6853:2;6848:3;6789:67;:::i;:::-;6782:74;;6865:93;6954:3;6865:93;:::i;:::-;6983:2;6978:3;6974:12;6967:19;;6626:366;;;:::o;6998:419::-;7164:4;7202:2;7191:9;7187:18;7179:26;;7251:9;7245:4;7241:20;7237:1;7226:9;7222:17;7215:47;7279:131;7405:4;7279:131;:::i;:::-;7271:139;;6998:419;;;:::o;7423:180::-;7471:77;7468:1;7461:88;7568:4;7565:1;7558:15;7592:4;7589:1;7582:15;7609:305;7649:3;7668:20;7686:1;7668:20;:::i;:::-;7663:25;;7702:20;7720:1;7702:20;:::i;:::-;7697:25;;7856:1;7788:66;7784:74;7781:1;7778:81;7775:107;;;7862:18;;:::i;:::-;7775:107;7906:1;7903;7899:9;7892:16;;7609:305;;;;:::o;7920:225::-;8060:34;8056:1;8048:6;8044:14;8037:58;8129:8;8124:2;8116:6;8112:15;8105:33;7920:225;:::o;8151:366::-;8293:3;8314:67;8378:2;8373:3;8314:67;:::i;:::-;8307:74;;8390:93;8479:3;8390:93;:::i;:::-;8508:2;8503:3;8499:12;8492:19;;8151:366;;;:::o;8523:419::-;8689:4;8727:2;8716:9;8712:18;8704:26;;8776:9;8770:4;8766:20;8762:1;8751:9;8747:17;8740:47;8804:131;8930:4;8804:131;:::i;:::-;8796:139;;8523:419;;;:::o;8948:102::-;8990:8;9037:5;9034:1;9030:13;9009:34;;8948:102;;;:::o;9056:848::-;9117:5;9124:4;9148:6;9139:15;;9172:5;9163:14;;9186:712;9207:1;9197:8;9194:15;9186:712;;;9302:4;9297:3;9293:14;9287:4;9284:24;9281:50;;;9311:18;;:::i;:::-;9281:50;9361:1;9351:8;9347:16;9344:451;;;9776:4;9769:5;9765:16;9756:25;;9344:451;9826:4;9820;9816:15;9808:23;;9856:32;9879:8;9856:32;:::i;:::-;9844:44;;9186:712;;;9056:848;;;;;;;:::o;9910:1073::-;9964:5;10155:8;10145:40;;10176:1;10167:10;;10178:5;;10145:40;10204:4;10194:36;;10221:1;10212:10;;10223:5;;10194:36;10290:4;10338:1;10333:27;;;;10374:1;10369:191;;;;10283:277;;10333:27;10351:1;10342:10;;10353:5;;;10369:191;10414:3;10404:8;10401:17;10398:43;;;10421:18;;:::i;:::-;10398:43;10470:8;10467:1;10463:16;10454:25;;10505:3;10498:5;10495:14;10492:40;;;10512:18;;:::i;:::-;10492:40;10545:5;;;10283:277;;10669:2;10659:8;10656:16;10650:3;10644:4;10641:13;10637:36;10619:2;10609:8;10606:16;10601:2;10595:4;10592:12;10588:35;10572:111;10569:246;;;10725:8;10719:4;10715:19;10706:28;;10760:3;10753:5;10750:14;10747:40;;;10767:18;;:::i;:::-;10747:40;10800:5;;10569:246;10840:42;10878:3;10868:8;10862:4;10859:1;10840:42;:::i;:::-;10825:57;;;;10914:4;10909:3;10905:14;10898:5;10895:25;10892:51;;;10923:18;;:::i;:::-;10892:51;10972:4;10965:5;10961:16;10952:25;;9910:1073;;;;;;:::o;10989:285::-;11049:5;11073:23;11091:4;11073:23;:::i;:::-;11065:31;;11117:27;11135:8;11117:27;:::i;:::-;11105:39;;11163:104;11200:66;11190:8;11184:4;11163:104;:::i;:::-;11154:113;;10989:285;;;;:::o;11280:348::-;11320:7;11343:20;11361:1;11343:20;:::i;:::-;11338:25;;11377:20;11395:1;11377:20;:::i;:::-;11372:25;;11565:1;11497:66;11493:74;11490:1;11487:81;11482:1;11475:9;11468:17;11464:105;11461:131;;;11572:18;;:::i;:::-;11461:131;11620:1;11617;11613:9;11602:20;;11280:348;;;;:::o;11634:180::-;11682:77;11679:1;11672:88;11779:4;11776:1;11769:15;11803:4;11800:1;11793:15;11820:185;11860:1;11877:20;11895:1;11877:20;:::i;:::-;11872:25;;11911:20;11929:1;11911:20;:::i;:::-;11906:25;;11950:1;11940:35;;11955:18;;:::i;:::-;11940:35;11997:1;11994;11990:9;11985:14;;11820:185;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "760600",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"_tokenList(uint256)": "infinite",
				"addNewToken(address)": "infinite",
				"owner()": "2544",
				"swapTokenToEvolve(uint256,uint256)": "infinite",
				"tokenIndex()": "2495",
				"tokenMarket()": "infinite",
				"tokenPriceWithUSD()": "2473",
				"transferOwnership(address)": "30811",
				"updateTokenPrice(uint256)": "24962"
			},
			"internal": {
				"multiply(uint256,uint256,uint256)": "infinite"
			}
		},
		"methodIdentifiers": {
			"_tokenList(uint256)": "4eb6b067",
			"addNewToken(address)": "64db444a",
			"owner()": "8da5cb5b",
			"swapTokenToEvolve(uint256,uint256)": "1a909cd5",
			"tokenIndex()": "d55f9273",
			"tokenMarket()": "0f323484",
			"tokenPriceWithUSD()": "be39f1af",
			"transferOwnership(address)": "f2fde38b",
			"updateTokenPrice(uint256)": "676c0d77"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "contract ERC20",
					"name": "_ercToken",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "_tokenList",
			"outputs": [
				{
					"internalType": "contract ERC20",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "contract ERC20",
					"name": "_ERCToken",
					"type": "address"
				}
			],
			"name": "addNewToken",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "_tokenIndex",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_evolveAmount",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_tokenIndex",
					"type": "uint256"
				}
			],
			"name": "swapTokenToEvolve",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "tokenIndex",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "tokenMarket",
			"outputs": [
				{
					"internalType": "contract ERC20",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "tokenPriceWithUSD",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_newPriceWithUSD",
					"type": "uint256"
				}
			],
			"name": "updateTokenPrice",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}